<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>lc15三数之和</title>
      <link href="/2022/12/31/lc15%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2022/12/31/lc15%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/3sum/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>考虑先排序，有序的情况下，可通过双指针将<code>O(n ^ 2)</code>情况（两层<code>for</code>循环方案）优化为<code>O(n)</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    vector&lt;vector&lt;int&gt;&gt; threeSum(vector&lt;int&gt;&amp; nums) &#123;</span><br><span class="line">        vector&lt;vector&lt;int&gt;&gt; res;</span><br><span class="line">        sort(nums.begin(), nums.end());</span><br><span class="line"></span><br><span class="line">        for(int i = 0; i &lt; nums.size(); i ++ ) &#123;</span><br><span class="line">            if(i &amp;&amp; nums[i] == nums[i - 1]) continue;</span><br><span class="line">            for(int j = i + 1, k = nums.size() - 1; j &lt; k; j ++ ) &#123;</span><br><span class="line">                if(j &gt; i + 1 &amp;&amp; nums[j] == nums[j - 1]) continue;</span><br><span class="line">                while(k &gt; j + 1 &amp;&amp; nums[i] + nums[j] + nums[k - 1] &gt;= 0) k --;</span><br><span class="line">                if(nums[i] + nums[j] + nums[k] == 0) </span><br><span class="line">                    res.push_back(&#123;nums[i], nums[j], nums[k]&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return res;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 双指针 </tag>
            
            <tag> 排序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc14最长公共前缀</title>
      <link href="/2022/12/31/lc14%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/"/>
      <url>/2022/12/31/lc14%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/longest-common-prefix/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>两层循环，第一层表示公共前缀的第几个字母，第二层表示各个字符串</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    string longestCommonPrefix(vector&lt;string&gt;&amp; strs) &#123;</span><br><span class="line">        string res = &quot;&quot;;</span><br><span class="line">        if(strs.empty()) return res;</span><br><span class="line">        for(int i = 0; ; i ++ ) &#123;</span><br><span class="line">            if(i &gt;= strs[0].size()) return res;</span><br><span class="line">            char c = strs[0][i];</span><br><span class="line">            for(int j = 0; j &lt; strs.size(); j ++ ) &#123;</span><br><span class="line">                if(i &gt;= strs[j].size() || strs[j][i] != c) </span><br><span class="line">                    return res;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            res += c;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc13罗马数字转整数</title>
      <link href="/2022/12/31/lc13%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/"/>
      <url>/2022/12/31/lc13%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/roman-to-integer/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>哈希表表示字符对数值的映射，由于数字小的在数字大的右边，则当数字小的在数字大的左边情况即为拼接的情况，如<code>IX = 9</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int romanToInt(string s) &#123;</span><br><span class="line">        int res = 0;</span><br><span class="line">        unordered_map&lt;char, int&gt; heap;</span><br><span class="line">        heap[&#x27;I&#x27;] = 1;</span><br><span class="line">        heap[&#x27;V&#x27;] = 5;</span><br><span class="line">        heap[&#x27;X&#x27;] = 10;</span><br><span class="line">        heap[&#x27;L&#x27;] = 50;</span><br><span class="line">        heap[&#x27;C&#x27;] = 100;</span><br><span class="line">        heap[&#x27;D&#x27;] = 500;</span><br><span class="line">        heap[&#x27;M&#x27;] = 1000;</span><br><span class="line"></span><br><span class="line">        for(int i = 0; i &lt; s.size(); i ++ ) &#123;</span><br><span class="line">            if(i + 1 &lt; s.size() &amp;&amp; heap[s[i]] &lt; heap[s[i + 1]]) &#123;</span><br><span class="line">                res -= heap[s[i]];</span><br><span class="line">                continue;</span><br><span class="line">            &#125; </span><br><span class="line">            res += heap[s[i]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哈希表 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc12整数转罗马数字</title>
      <link href="/2022/12/31/lc12%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/"/>
      <url>/2022/12/31/lc12%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/integer-to-roman/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>列出所有对应情况，从大到小依次减，即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    string intToRoman(int num) &#123;</span><br><span class="line">        string res = &quot;&quot;;</span><br><span class="line">        string reps[] = &#123;</span><br><span class="line">            &quot;M&quot;,</span><br><span class="line">            &quot;CM&quot;, &quot;D&quot;, &quot;CD&quot;, &quot;C&quot;,</span><br><span class="line">            &quot;XC&quot;, &quot;L&quot;, &quot;XL&quot;, &quot;X&quot;,</span><br><span class="line">            &quot;IX&quot;, &quot;V&quot;, &quot;IV&quot;, &quot;I&quot;,</span><br><span class="line">        &#125;;</span><br><span class="line">        int values[] = &#123;</span><br><span class="line">          1000,</span><br><span class="line">          900, 500, 400, 100,</span><br><span class="line">          90, 50, 40, 10,</span><br><span class="line">          9, 5, 4, 1,  </span><br><span class="line">        &#125;;</span><br><span class="line">        for(int i = 0; i &lt; 13; i ++ ) &#123;</span><br><span class="line">            while(num &gt;= values[i]) &#123;</span><br><span class="line">                num -= values[i];</span><br><span class="line">                res += reps[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哈希表 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc11盛最多水的容器</title>
      <link href="/2022/12/31/lc11%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/"/>
      <url>/2022/12/31/lc11%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/container-with-most-water/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>双指针维护左右边界，<code>res = (r - l) * min(height[l], height[r]);</code></p><p>若<code>height[l] &lt; height[r]</code>, <code>l ++ </code></p><p>若<code>height[l] &gt;= height[r]</code>, <code>r -- </code> </p><p>移动两边界中，高度相对较小的那个，使面积可能变得更大，因为无论移动哪一个边界， <code>r - l</code>一定会变小</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    int maxArea(vector&lt;int&gt;&amp; height) &#123;</span><br><span class="line">        int res = 0;</span><br><span class="line">        int l = 0, r = height.size() - 1;</span><br><span class="line">        while(l &lt; r) &#123;</span><br><span class="line">            res = max(res, (r - l) * min(height[l], height[r]));</span><br><span class="line">            if(height[l] &lt; height[r]) l ++ ;</span><br><span class="line">            else r -- ;</span><br><span class="line">        &#125;</span><br><span class="line">        return  res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc10正则表达式匹配</title>
      <link href="/2022/12/30/lc10%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/"/>
      <url>/2022/12/30/lc10%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D/</url>
      
        <content type="html"><![CDATA[<h3 id="原题链接、"><a href="#原题链接、" class="headerlink" title="原题链接、"></a><a href="https://leetcode.cn/problems/regular-expression-matching/">原题链接</a>、</h3><h3 id="待补充。。"><a href="#待补充。。" class="headerlink" title="待补充。。"></a>待补充。。</h3>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc9回文数</title>
      <link href="/2022/12/30/lc9%E5%9B%9E%E6%96%87%E6%95%B0/"/>
      <url>/2022/12/30/lc9%E5%9B%9E%E6%96%87%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/palindrome-number/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><h4 id="一、转换为字符串反转比较"><a href="#一、转换为字符串反转比较" class="headerlink" title="一、转换为字符串反转比较"></a>一、转换为字符串反转比较</h4><h4 id="二、通过res-res-10-res翻转，判断两数是否相同（注意反转可能爆int）"><a href="#二、通过res-res-10-res翻转，判断两数是否相同（注意反转可能爆int）" class="headerlink" title="二、通过res = res * 10 + res翻转，判断两数是否相同（注意反转可能爆int）"></a>二、通过<code>res = res * 10 + res</code>翻转，判断两数是否相同（注意反转可能爆<code>int</code>）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    bool isPalindrome(int x) &#123;</span><br><span class="line">        if(x &lt; 0) return false;</span><br><span class="line">        int y = x;</span><br><span class="line">        long long res = 0;</span><br><span class="line">        while(x) &#123;</span><br><span class="line">            res = res * 10 + x % 10;</span><br><span class="line">            x /= 10;</span><br><span class="line">        &#125;</span><br><span class="line">        return y == (int)res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc8字符串转换整数 (atoi)</title>
      <link href="/2022/12/30/lc8%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/"/>
      <url>/2022/12/30/lc8%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/string-to-integer-atoi/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>根据题目模拟即可，注意<code>int</code>溢出情况，同<a href="https://leetcode.cn/problems/reverse-integer/">第七题</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">myAtoi</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(k &lt; s.<span class="built_in">size</span>() &amp;&amp; s[k] == <span class="string">&#x27; &#x27;</span>) k ++ ;</span><br><span class="line">        <span class="keyword">if</span>(k == s.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> minus = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(s[k] == <span class="string">&#x27;-&#x27;</span>) &#123;</span><br><span class="line">            minus = <span class="number">-1</span>;</span><br><span class="line">            k ++ ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(s[k] == <span class="string">&#x27;+&#x27;</span>) &#123;</span><br><span class="line">            k ++ ;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(k &lt; s.<span class="built_in">size</span>() &amp;&amp; s[k] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[k] &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(minus &gt; <span class="number">0</span> &amp;&amp; res &gt; (INT_MAX - (s[k] - <span class="string">&#x27;0&#x27;</span>)) / <span class="number">10</span>) <span class="keyword">return</span> INT_MAX;</span><br><span class="line">            <span class="keyword">if</span>(minus &lt; <span class="number">0</span> &amp;&amp; -res &lt; (INT_MIN + (s[k] - <span class="string">&#x27;0&#x27;</span>)) / <span class="number">10</span>) <span class="keyword">return</span> INT_MIN;</span><br><span class="line">            <span class="keyword">if</span> (-res * <span class="number">10</span> - (s[k] - <span class="string">&#x27;0&#x27;</span>) == INT_MIN) <span class="keyword">return</span> INT_MIN;</span><br><span class="line"></span><br><span class="line">            res = res * <span class="number">10</span> + (s[k] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">            k ++ ;</span><br><span class="line">            <span class="comment">//if (res &gt; INT_MAX) break;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res * minus;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc7整数反转</title>
      <link href="/2022/12/30/lc7%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/"/>
      <url>/2022/12/30/lc7%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/reverse-integer/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>注意<code>int</code>越界时的情况，若发生越界时，无法直接用<code>res &gt; INT_MAX</code>或<code>res &lt; INT_MIN</code>判断；</p><p>由<code>res = res * 10 + x % 10</code>; </p><p>推出越界情况，正数：<code>res &gt; (INT_MAX - x % 10) / 10</code><br>             负数：<code>res &lt; (INT_MIN - x % 10) / 10</code></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">reverse</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(x) &#123;</span><br><span class="line">            <span class="keyword">if</span>(x &gt; <span class="number">0</span> &amp;&amp; res &gt; (INT_MAX - x % <span class="number">10</span>) / <span class="number">10</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(x &lt; <span class="number">0</span> &amp;&amp; res &lt; (INT_MIN - x % <span class="number">10</span>) / <span class="number">10</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">            res = res * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">            x /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc6Z 字形变换</title>
      <link href="/2022/12/30/lc6Z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/"/>
      <url>/2022/12/30/lc6Z-%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/zigzag-conversion/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>分解为几段等差数列</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">string <span class="title">convert</span><span class="params">(string s, <span class="type">int</span> numRows)</span> </span>&#123;</span><br><span class="line">        string res = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; numRows; i ++ ) &#123;</span><br><span class="line">            <span class="keyword">if</span>(numRows == <span class="number">1</span>) <span class="keyword">return</span> s;</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span> || i == numRows - <span class="number">1</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = i; j &lt; s.<span class="built_in">size</span>(); j += <span class="number">2</span> * numRows - <span class="number">2</span>) &#123;</span><br><span class="line">                    res += s[j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> j = i, k = <span class="number">2</span> * numRows - <span class="number">2</span> - j; j &lt; s.<span class="built_in">size</span>() || k &lt; s.<span class="built_in">size</span>(); j += <span class="number">2</span> * numRows - <span class="number">2</span>, k += <span class="number">2</span> * numRows - <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(j &lt; s.<span class="built_in">size</span>()) res += s[j];</span><br><span class="line">                    <span class="keyword">if</span>(k &lt; s.<span class="built_in">size</span>()) res += s[k];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc5最长回文子串</title>
      <link href="/2022/12/29/lc5%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/"/>
      <url>/2022/12/29/lc5%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/longest-palindromic-substring/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>遍历字符串，在每一处开双指针，向左右依次遍历<code>（s[l] == s[r]且未出界的情况下）</code>，找到以当前点为中心的最长回文子串，注意为<code>aba</code>型还是<code>abba</code>型，分两种情况讨论</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">class Solution &#123;</span><br><span class="line">public:</span><br><span class="line">    string longestPalindrome(string s) &#123;</span><br><span class="line">        string res;</span><br><span class="line">        for(int i = 0; i &lt; s.size(); i ++ ) &#123;</span><br><span class="line">            int l = i - 1, r = i + 1;</span><br><span class="line">            while(l &gt;= 0 &amp;&amp; r &lt; s.size() &amp;&amp; s[l] == s[r]) l --, r ++ ;</span><br><span class="line">            if(res.size() &lt; r - l - 1) res = s.substr(l + 1, r - l - 1);</span><br><span class="line"></span><br><span class="line">            l = i, r = i + 1;</span><br><span class="line">            while( l &gt;= 0 &amp;&amp; r &lt; s.size() &amp;&amp; s[l] == s[r] ) l --, r ++ ;</span><br><span class="line">            if(res.size() &lt; r - l - 1) res = s.substr(l + 1, r - l - 1);</span><br><span class="line">        &#125;</span><br><span class="line">        return res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc4寻找两个正序数组的中位数</title>
      <link href="/2022/12/29/lc4%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/"/>
      <url>/2022/12/29/lc4%E5%AF%BB%E6%89%BE%E4%B8%A4%E4%B8%AA%E6%AD%A3%E5%BA%8F%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/median-of-two-sorted-arrays/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>两数组有序，找二者的中位数；</p><p>1）总数为偶数，中位数即为第<code>tot / 2</code>与第<code>tot / 2 + 1</code>个数的平均值；</p><p>2）总数为奇数，中位数即为第<code>tot / 2 + 1</code>个数；</p><p>每次比较<code>nums1[si]</code>与<code>nums2[sj]</code>的大小，即两个数组各自中点的大小，删除二者中较小的部分，则删除的部分一定不存在所求中位数；</p><p>这样递归每次删除<code>k / 2</code> 个元素，直到1）一个数组为空 2）最后一次要删除的<code>K / 2 == 1</code>时。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums1, vector&lt;<span class="type">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> tot = nums1.<span class="built_in">size</span>() + nums2.<span class="built_in">size</span>();</span><br><span class="line">        <span class="comment">//奇偶分情况</span></span><br><span class="line">        <span class="keyword">if</span>(tot % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">int</span> left = <span class="built_in">find</span>(nums1, <span class="number">0</span>, nums2, <span class="number">0</span>, tot / <span class="number">2</span>);</span><br><span class="line">            <span class="type">int</span> right = <span class="built_in">find</span>(nums1, <span class="number">0</span>, nums2, <span class="number">0</span>, tot / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">return</span> (left + right) / <span class="number">2.0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">find</span>(nums1, <span class="number">0</span>, nums2, <span class="number">0</span>, tot / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除前 k / 2 个元素，并非需要真的删除，设置i, j 为数组的开头元素</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums1, <span class="type">int</span> i, vector&lt;<span class="type">int</span>&gt;&amp; nums2, <span class="type">int</span> j, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//设定nums1数组永远为较短的那个数组</span></span><br><span class="line">        <span class="keyword">if</span>(nums1.<span class="built_in">size</span>() - i &gt; nums2.<span class="built_in">size</span>() - j) </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">find</span>(nums2, j, nums1, i, k);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//k为1时，即找当前两数组的最小值的数，需判断数组是否为空</span></span><br><span class="line">        <span class="keyword">if</span>(k == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums1.<span class="built_in">size</span>() == i) <span class="keyword">return</span> nums2[j];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">min</span>(nums1[i], nums2[j]);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//当一个数组为空时，可直接找到第k个小的数</span></span><br><span class="line">        <span class="keyword">if</span>(nums1.<span class="built_in">size</span>() == i) <span class="keyword">return</span> nums2[j + k - <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="comment">//找每个数组第k / 2个点，注意：i + k / 2 其实为中点的下一个点</span></span><br><span class="line">        <span class="type">int</span> si = <span class="built_in">min</span>((<span class="type">int</span>)nums1.<span class="built_in">size</span>(), i + k / <span class="number">2</span>), sj = j + k/ <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums1[si - <span class="number">1</span>] &gt; nums2[sj - <span class="number">1</span>]) </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">find</span>(nums1, i, nums2, sj, k - (sj - j));</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">find</span>(nums1, si, nums2, j, k - (si - i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 二分查找 </tag>
            
            <tag> 分治 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc3无重复字符的最长子串</title>
      <link href="/2022/12/29/lc3%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/"/>
      <url>/2022/12/29/lc3%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/longest-substring-without-repeating-characters/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>定义一个哈希表，表示字符<code>key</code>与出现次数<code>value</code>的映射。</p><p>设置<code>i j</code>快慢指针，当前一指针遍历发现有<code>value</code>大于1时，表示从s[j]到s[i]这一字串中，有重复出现的字符，则令后一指针向前走，直到该<code>key</code>对应的<code>value</code>减为1。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(string s)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; heap;</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i ++ ) &#123;</span><br><span class="line">            heap[s[i]] ++ ;</span><br><span class="line">            <span class="keyword">while</span>(heap[s[i]] &gt; <span class="number">1</span>) heap[s[j ++ ]] -- ;</span><br><span class="line">            res = <span class="built_in">max</span>(res, i - j + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 哈希表 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 滑动窗口 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc2两数相加</title>
      <link href="/2022/12/29/lc2%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/"/>
      <url>/2022/12/29/lc2%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/add-two-numbers/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>类似于大数相加，一般首先定义一个虚拟头节点，免去最后找头节点的麻烦。</p><p>t作为进位标志，当l1、l2或进位t不为空时，表示加法还未结束。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> dummy = <span class="keyword">new</span> <span class="built_in">ListNode</span>(<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">auto</span> now = dummy;</span><br><span class="line">        <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l1 || l2 || t) &#123;</span><br><span class="line">            <span class="keyword">if</span>(l1) t += l1-&gt;val, l1 = l1-&gt;next;</span><br><span class="line">            <span class="keyword">if</span>(l2) t += l2-&gt;val, l2 = l2-&gt;next; </span><br><span class="line">            now-&gt;next = <span class="keyword">new</span> <span class="built_in">ListNode</span>(t % <span class="number">10</span>);</span><br><span class="line">            now = now-&gt;next;</span><br><span class="line">            t = t / <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dummy-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 递归 </tag>
            
            <tag> 链表 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>lc1-两数之和</title>
      <link href="/2022/12/29/lc1%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
      <url>/2022/12/29/lc1%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h3 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://leetcode.cn/problems/two-sum/">题目链接</a></h3><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><h4 id="1、暴力-O-n-2"><a href="#1、暴力-O-n-2" class="headerlink" title="1、暴力 O(n^2)"></a>1、暴力 <code>O(n^2)</code></h4><p>两层<code>for</code>循环</p><h4 id="2、哈希表-O-n"><a href="#2、哈希表-O-n" class="headerlink" title="2、哈希表 O(n)"></a>2、哈希表 <code>O(n)</code></h4><p><code>unordered_map&lt;key, value&gt;</code>即<code>key</code>对<code>value</code>的映射，可在<code>O(1)</code>的时间内通过<code>key</code>找到<code>value</code>；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">twoSum</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> target)</span> </span>&#123;</span><br><span class="line">        unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; heap;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i ++ ) &#123;</span><br><span class="line">            <span class="type">int</span> r = target - nums[i];</span><br><span class="line">            <span class="comment">//判断有没有与之相对应的数存在</span></span><br><span class="line">            <span class="keyword">if</span>(heap.<span class="built_in">count</span>(r)) <span class="keyword">return</span>&#123;heap[r], i&#125;;</span><br><span class="line">            <span class="comment">//查找不成功，则将当前点加入哈希表中</span></span><br><span class="line">            heap[nums[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> leetcode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组 </tag>
            
            <tag> 哈希表 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
